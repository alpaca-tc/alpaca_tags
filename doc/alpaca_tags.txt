*alpaca_tags.txt*        Create tags automatically

FILE: alpaca_tags
AUTHOR: alpaca-tc <alpaca-tc@alpaca.tc>
Last Modified: Jun 14 2014
" License: MIT license  {{{
Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:
The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS                                        *alpaca_tags-contents*

Introduction                |alpaca_tags-introduction|
Usage                        |alpaca_tags-usage|
Install                        |alpaca_tags-install|
Configuration Examples        |alpaca_tags-examples|
Interface                |alpaca_tags-interface|
  Commands                  |alpaca_tags-commands|
  Variables                  |alpaca_tags-variables|

==============================================================================
INTRODUCTION                                        *alpaca_tags-introduction*

*alpaca_tags* or *alpaca_tags.vim* asynchronously generate tags from within vim.

==============================================================================
USAGE                                                *alpaca_tags-usage*

        To create a tags in the current working directory.
>
        :AlpacaTagsUpdate
<
        To create a tags depends on Gemfile in the current working directory.
>
        :AlpacaTagsBundle
<
        To set a tags which is generated by alpaca_tags in the current working directory.
>
        :AlpacaTagsSet
<

==============================================================================
INSTALL                                                *alpaca_tags-install*

>
        NeoBundleLazy 'alpaca-tc/alpaca_tags', {
              \ 'depends': ['Shougo/vimproc'],
              \ 'autoload' : {
              \   'commands' : [
              \     { 'name' : 'AlpacaTagsBundle', 'complete': 'customlist,alpaca_tags#complete_source' },
              \     { 'name' : 'AlpacaTagsUpdate', 'complete': 'customlist,alpaca_tags#complete_source' },
              \     'AlpacaTagsSet', 'AlpacaTagsCleanCache', 'AlpacaTagsEnable', 'AlpacaTagsDisable', 'AlpacaTagsKillProcess', 'AlpacaTagsProcessStatus',
              \ ],
              \ }}


==============================================================================
INTERFACE                                        *alpaca_tags-interface*

alpaca_tags generates tags to g:alpaca_tags#cache_dir.

------------------------------------------------------------------------------
COMMANDS                                         *alpaca_tags-commands*

:AlpacaTagsUpdate [{options}]                        *:AlpacaTagsUpdate*
                alpaca_tags generates tags in the working directory.
                If you set |g:alpaca_tags#config|, you can use key as alias.

                For example:

>
                let g:alpaca_tags#config = {
                       \ '_' : '-R --sort=yes --languages=+Ruby --languages=-js,JavaScript',
                       \ 'js' : '--languages=+js',
                       \ '-js' : '--languages=-js,JavaScript',
                       \ 'vim' : '--languages=+Vim,vim',
                       \ 'php' : '--languages=+php',
                       \ '-vim' : '--languages=-Vim,vim',
                       \ '-style': '--languages=-css,scss,js,JavaScript,html',
                       \ 'scss' : '--languages=+scss --languages=-css',
                       \ 'css' : '--languages=+css',
                       \ 'java' : '--languages=+java $JAVA_HOME/src',
                       \ 'ruby': '--languages=+Ruby',
                       \ 'coffee': '--languages=+coffee',
                       \ '-coffee': '--languages=-coffee',
                       \ 'bundle': '--languages=+Ruby',
                       \ }

                :AlpacaTagsUpdate -R
                Execute `ctags -R` in the current working directory.

                :AlpacaTags ruby
                Execute `ctags --languages=Ruby -R --sort=yes --languages=+Ruby --languages=-js,JavaScript` in the root current working directory.

:AlpacaTagsBundle [{options}]                            *:AlpacaTagsBundle*
                alpaca_tags generates tags of each gem from Gemfile in the root working directory.

:AlpacaTagsSet                                           *:AlpacaTagsSet*
                Vim loads generated tags.

:AlpacaTagsCleanCache                                        *:AlpacaTagsCleanCache*
                Removes generated tags and caches.

:AlpacaTagsDisable                                        *:AlpacaTagsDisable*
                Disables alpaca_tags

:AlpacaTagsEnable                                        *:AlpacaTagsEnable*
                Enables alpaca_tags

:AlpacaTagsKillProcess                                   *:AlpacaTagsKillProcess*
                Kills runnning processes.

------------------------------------------------------------------------------
VARIABLES                                         *alpaca_tags-variables*

g:alpaca_tags#cache_dir                           *g:alpaca_tags#cache_dir*
                Specify directories to store generated tags.
                The default value is expand('~/.alpaca_tags')

g:alpaca_tags#disable                                *g:alpaca_tags#disable*
                If it is 1, alpaca_tags is not running.

g:alpaca_tags#ctags_bin                                *g:alpaca_tags#ctags_bin*
                Set ctags command path.

                The default value is
                '/Applications/MacVim.app/Contents/MACOS/ctags' or 'ctags'.

g:alpaca_tags#config                                *g:alpaca_tags#config*
                Set alias command for ctags.
                Example
>
                let g:alpaca_tags_config = {
                        \ '_' : '-R --sort=yes --languages=+Ruby --languages=-js,JavaScript',
                        \ 'default' : '--languages=-css,scss,html,js,JavaScript',
                        \ 'js' : '--languages=+js',
                        \ '-js' : '--languages=-js,JavaScript',
                        \ 'vim' : '--languages=+Vim,vim',
                        \ 'php' : '--languages=+php',
                        \ '-vim' : '--languages=-Vim,vim',
                        \ '-style': '--languages=-css,scss,js,JavaScript,html',
                        \ 'scss' : '--languages=+scss --languages=-css',
                        \ 'css' : '--languages=+css',
                        \ 'java' : '--languages=+java $JAVA_HOME/src',
                        \ 'ruby': '--languages=+Ruby',
                        \ 'coffee': '--languages=+coffee',
                        \ '-coffee': '--languages=-coffee',
                        \ 'bundle': '--languages=+Ruby',
                        \ }
<

g:alpaca_tags#single_task                                *g:alpaca_tags#single_task*
                If it is 1, the maximum of process is only 1.

g:alpaca_tags#timeout_period                                *g:alpaca_tags#timeout_period*
                If it is 60, alpaca_tags will kill process in 60 seconds.

g:alpaca_tags#console                                 *g:alpaca_tags#console*
                NOTE This variable is options for debugger.
>
                If it is as following, debug is shown.

                         let g:alpaca_tags#console = {
                               \ 'report' : 1,
                               \ }


==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
